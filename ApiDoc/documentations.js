
const data = [
    {
        id: "c1a78207-47c8-44e5-9125-8fe50ff01872",
        title: "How work with schem data",
        article: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lacinia quis vel eros donec ac. Tortor aliquam nulla facilisi cras fermentum odio eu."
    },
    {
        id: "bcb8ed66-d59e-43cb-b5b8-ae7139c2ac3c",
        title: "How dose schem data must be?",
        article: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lacinia quis vel eros donec ac. Tortor aliquam nulla facilisi cras fermentum odio eu."
    }
]


const swaggerDocumentation = {
    openapi: "3.0.3",
    info: {
        title: "Blog API  (Group 5)",
        version: "0.0.1",
        description: "This is simple blog REST API with CRUD functions"
    },
    servers: [
        {
            url: "http://localhost:3000",
            description: "Local Host Dev"
        }
    ],
    tags: [
        {
            name: "Blog",
            description: "Every things about blog post"
        }
    ],
    paths: {
        "/api/blog": {
            get: {
                tags: ["Blog"],
                summary: "Get the blog posts\' list",
                description: "You can get all blogs that saved in the server",
                responses: {
                    200: {
                        description: "Successful operation",
                        content: {
                            "application/json": {
                                schema: {
                                    type: "object",
                                    example: {
                                        msg: "Post:",
	                                    result: data.length,
	                                    status: "success",
	                                    data
                                    }
                                }
                            }
                        }
                    }
                }
            },
            post: {
                tags: ["Blog"],
                summary: "Add a blog post",
                description: "You can add blog post to the server",
                requestBody:{
                    description: "Create a new blog post in the server",
                    content: {
                        "application/json": {
                            schema:{
                                type: "object",
                                properties: {
                                    title: {
                                        type: "string",
                                        description: "Title of the blog post"
                                    },
                                    article: {
                                        type: "string",
                                        description: "Body of the blog post"
                                    }
                                },
                                example: {
                                    title: "How work with schem data",
                                    article: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lacinia quis vel eros donec ac. Tortor aliquam nulla facilisi cras fermentum odio eu."
                                }
                            }
                        }
                    },
                    required: true
                },
                responses: {
                    200: {
                        description: "Successful operation",
                        content: {
                            "application/json": {
                                schema: {
                                    type: "object",
                                    example: {
                                        msg: "Post upploaded!",
	                                    data: [data[0]]
                                    }
                                }
                            }
                        }
                    }
                }
            },
        },
        "/api/blog/:id": {
            put: {
                tags: ["Blog"],
                summary: "Update the blog post by ID",
                description: "You can update the blog post by posts\' ID",
                parameters: [
                    {
                    name: "blogId",
                    in: "path",
                    description: "ID of the specific blog post which was generated by \"uuid\"",
                    required: true,
                    schema: {
                        type: "string",
                        description: "Each ID generated by \"uuid\""
                    },
                    example: "c1a78207-47c8-44e5-9125-8fe50ff01872",
                    }
                ],
                requestBody:{
                    description: "Update the blog by ID",
                    content: {
                        "application/json": {
                            schema:{
                                type: "object",
                                properties: {
                                    title: {
                                        type: "string",
                                        description: "Title of the blog post"
                                    },
                                    article: {
                                        type: "string",
                                        description: "Body of the blog post"
                                    }
                                },
                                example: {
                                    title: "How work with schem data",
                                    article: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lacinia quis vel eros donec ac. Tortor aliquam nulla facilisi cras fermentum odio eu."
                                }
                            }
                        }
                    }                    
                },
                responses: {
                    200: {
                        description: "Successful operation",
                        content: {
                            "application/json": {
                                schema: {
                                    type: "object",
                                    example: {
                                        msg: 'Blog updated',
                                        status: 'success',
                                        data
                                    }
                                }
                            }
                        }
                    },
                    404: {
                        description: "The ID was not valid",
                        content: {
                            "application/json": {
                                schema: {
                                    type: "object",
                                    example: {
                                        msg: 'Validation error',
                                        status: 'Failed',
                                    }
                                }
                            }
                        }
                    },
                    400: {
                        description: "The required fild is empty",
                        content: {
                            "application/json": {
                                schema: {
                                    type: "object",
                                    example: {
                                        msg: 'Please insert title or article',
                                        status: 'Failed',
                                    }
                                }
                            }
                        }
                    }
                }

            },
            delete: {
                tags: ["Blog"],
                summary: "Delete the blog post by ID",
                description: "You can delete the blog post in the server",
                parameters: [
                    {
                    name: "blogId",
                    in: "path",
                    description: "ID of the specific blog post which was generated by \"uuid\"",
                    required: true,
                    schema: {
                        type: "string",
                        description: "Each ID generated by \"uuid\""
                    },
                    example: "c1a78207-47c8-44e5-9125-8fe50ff01872",
                    }
                ],
                responses: {
                    200: {
                        description: "Successful operation",
                        content: {
                            "application/json": {
                                schema: {
                                    type: "object",
                                    example: {
                                        msg: '`Blog with id: c1a78207-47c8-44e5-9125-8fe50ff01872  deleted`',
                                        status: 'success',
                                        data: [data[1]]
                                    }
                                }
                            }
                        }
                    },
                    404: {
                        description: "The ID not found",
                        content: {
                            "application/json": {
                                schema: {
                                    type: "object",
                                    example: {
                                        msg: 'id match error',
                                        status: 'Failed'
                                    }
                                }
                            }
                        }
                    }
                }

            }
        }

    }
}

module.exports = swaggerDocumentation;